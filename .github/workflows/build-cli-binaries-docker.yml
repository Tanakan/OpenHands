name: Build CLI Binaries (Docker)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: false
        type: string
        default: 'manual'
      create_release:
        description: 'Create a release'
        required: false
        type: boolean
        default: true

jobs:
  build-in-docker:
    runs-on: ubuntu-latest  # または利用可能な任意のrunner
    strategy:
      matrix:
        include:
          - platform: linux
            arch: x86_64
            dockerfile: Dockerfile.build-linux

    steps:
    - uses: actions/checkout@v4

    - name: Use existing Dockerfile
      run: |
        # Use the pre-created Dockerfile.cli-build for Linux builds
        cp Dockerfile.cli-build ${{ matrix.dockerfile }}

    - name: Build Docker image
      run: |
        docker build -f ${{ matrix.dockerfile }} -t openhands-build-${{ matrix.platform }} .

    - name: Extract binary from container
      run: |
        # Run container to copy artifacts
        docker run --rm -v "$(pwd)/dist-docker:/output" openhands-build-${{ matrix.platform }}
        
        # List extracted files
        ls -la dist-docker/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openhands-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist-docker/*

  release:
    needs: build-in-docker
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate release tag
      id: generate_tag
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          if [[ "${{ github.event.inputs.version }}" == "manual" ]]; then
            TAG="docker-manual-$(date +'%Y%m%d-%H%M%S')"
          else
            TAG="${{ github.event.inputs.version }}"
          fi
        else
          TAG="${{ github.ref_name }}"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Generated tag: $TAG"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.generate_tag.outputs.tag }}
        release_name: OpenHands CLI ${{ steps.generate_tag.outputs.tag }} (Docker Build)
        body: |
          ## OpenHands CLI Binary Release (Docker Build)
          
          This release includes pre-built binaries for:
          - **Linux** (x86_64) - Built in Docker container
          
          ### Installation
          
          1. Download the appropriate binary for your platform
          2. Extract the archive
          3. Make the binary executable (Unix systems): `chmod +x openhands*`
          4. Move to your PATH or run directly
          
          ### Usage
          
          ```bash
          openhands --help
          ```
          
          ### Note on macOS builds
          
          True macOS binaries require macOS SDK and proper code signing. The current Docker-based approach
          produces Linux binaries. For native macOS binaries, consider using a macOS runner or 
          cross-compilation toolchain with proper SDK.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in artifacts/*/*; do
          if [[ -f "$file" ]]; then
            echo "Uploading $file"
            gh release upload "${{ steps.generate_tag.outputs.tag }}" "$file" --clobber
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}